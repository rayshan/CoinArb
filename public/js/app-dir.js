// Generated by CoffeeScript 1.7.0
(function() {
  var dir;

  dir = angular.module('CaAppDir', ['ngAnimate']);

  dir.directive('caNumDisplay', function($animate) {
    return {
      templateUrl: 'partials/ca-num-display.html',
      replace: true,
      restrict: 'E',
      scope: {
        name: "@",
        type: "@",
        cur: "=",
        pre: "=",
        baseline: "=",
        baselineBest: "=",
        curId: "=",
        curBaseline: "=",
        preBaseline: "="
      },
      link: function(scope, ele, attrs) {
        var _numEle;
        _numEle = angular.element(ele[0].querySelector('.ca-main'));
        scope.getBaselineNameEng = function() {
          if (scope.baseline != null) {
            return scope.$parent.app.data[scope.baseline].displayNameEng;
          }
        };
        scope.show = function(input, equality) {
          return !isNaN(parseFloat(input)) && isFinite(input) && Math.abs(input) > equality;
        };
        scope.diff = function(cur, pre, pct) {
          if (pct === true) {
            return (cur - pre) / pre * 100;
          } else {
            return cur - pre;
          }
        };
        scope.diffBaseline = function(input, baseline) {
          if ((input != null) && (baseline != null)) {
            return Math.abs(input - baseline);
          }
        };
        scope.$on('tickerUpdate', function() {
          var c;
          if (scope.cur !== scope.pre && scope.show(scope.diff(scope.cur, scope.pre, true), 0.009)) {
            c = 'change';
            $animate.addClass(_numEle, c, function() {
              return $animate.removeClass(_numEle, c);
            });
          }
        });
      }
    };
  });

  dir.directive('caChart', function($q, $filter, caD3Svc) {
    return {
      templateUrl: 'partials/ca-chart.html',
      restrict: 'E',
      scope: {
        data: "="
      },
      link: function(scope, ele, attrs) {
        var c, errorCb, marginBase, notifyCb, promise;
        scope.rendered = false;
        c = {};
        c.canvas = ele[0].querySelector(".ca-chart-line").children[0];
        c.wOrig = d3.select(c.canvas).node().offsetWidth;
        c.hOrig = d3.select(c.canvas).node().offsetHeight;
        marginBase = 55;
        c.margin = {
          t: 0,
          l: marginBase,
          r: 0,
          b: c.hOrig * .4
        };
        c.margin2 = {
          t: c.hOrig * .6 + marginBase / 2,
          l: marginBase,
          r: 0,
          b: marginBase * .4
        };
        c.w = c.wOrig - c.margin.l - c.margin.r;
        c.h = c.hOrig - c.margin.t - c.margin.b;
        c.h2 = c.hOrig - c.margin2.t - c.margin2.b;
        c.color = d3.scale.category10();
        c.x = d3.time.scale().range([0, c.w]);
        c.x2 = d3.time.scale().range([0, c.w]);
        c.y = d3.scale.linear().range([c.h, 0]);
        c.y2 = d3.scale.linear().range([c.h2, 0]);
        c.axisX = d3.svg.axis().scale(c.x).orient("bottom");
        c.axisX2 = d3.svg.axis().scale(c.x2).orient("bottom");
        c.axisY = d3.svg.axis().scale(c.y).orient("left").ticks(10, "$");
        c.line = d3.svg.line().interpolate("basis").x(function(d) {
          return c.x(d.date);
        }).y(function(d) {
          return c.y(d.close);
        });
        c.line2 = d3.svg.line().interpolate("basis").x(function(d) {
          return c.x2(d.date);
        }).y(function(d) {
          return c.y2(d.close);
        });
        c.brushed = function() {
          c.x.domain(c.brush.empty() ? c.x2.domain() : c.brush.extent());
          c.focus.selectAll("path.line").attr("d", function(d) {
            return c.line(d.values);
          });
          c.focus.select(".x1").call(c.axisX);
        };
        c.brush = d3.svg.brush().x(c.x2).on("brush", c.brushed);
        c.chart = d3.select(c.canvas).attr("width", c.w + c.margin.l + c.margin.r).attr("height", c.h + c.margin.t + c.margin.b);
        c.chart.append("defs").append("clipPath").attr("id", "focus-clip").append("rect").attr("width", c.w).attr("height", c.h);
        c.focus = c.chart.append("g").attr('id', 'focus').attr("transform", "translate(" + c.margin.l + ", " + c.margin.t + ")");
        c.context = c.chart.append("g").attr('id', 'context').attr("transform", "translate(" + c.margin2.l + ", " + c.margin2.t + ")");
        c.infoBox = c.chart.append("g").attr('id', 'info-box').attr("transform", "translate(" + (c.margin.l * 2) + ", 0)");
        errorCb = function(what) {
          console.log(what.msg, what.error);
        };
        notifyCb = function(what) {
          console.log(what);
        };
        promise = caD3Svc.fetch(scope.data);
        promise.then(caD3Svc.render(c), errorCb, notifyCb).then(function() {
          return scope.rendered = true;
        });
      }
    };
  });

  dir.directive('caSelectFocus', function($q, $filter) {});

}).call(this);

//# sourceMappingURL=app-dir.map
