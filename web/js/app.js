// Generated by CoffeeScript 1.6.3
(function() {
  angular.module('app', ['ngAnimate', 'btford.socket-io']);

  angular.module('app').run(function(tickerSvc) {});

  angular.module('app').factory('exchangeSvc', function() {
    return {
      exchanges: {
        mtGox: {
          name: 'Mt. Gox',
          currency: '$',
          site: 'https://mtgox.com/',
          url: 'https://data.mtgox.com/api/2/BTCUSD/money/ticker'
        }
      }
    };
  });

  angular.module('app').factory('tickerSvc', function(exchangeSvc, $http, $timeout) {
    var data, poller;
    data = {
      response: 0,
      calls: 0
    };
    poller = function() {
      return $http.get('https://data.btcchina.com/data/ticker').then(function(res) {
        data.response = res.data.ticker.last;
        data.calls++;
        return $timeout(poller, 1000);
      });
    };
    poller();
    return {
      data: data
    };
  });

  angular.module('app').factory('socket', function(socketFactory) {
    return socketFactory({
      ioSocket: io.connect('http://socketio.mtgox.com:80/mtgox?Currency=USD')
    });
  });

  angular.module('app').controller('AppCtrl', function(socket, tickerSvc) {
    var channel, obj, _ref,
      _this = this;
    this.price = void 0;
    this.unsubscribe = {
      depthBTCUSD: {
        op: 'unsubscribe',
        channel: '24e67e0d-1cad-4cc0-9e7a-f8523ef460fe'
      },
      tradeBTC: {
        op: 'unsubscribe',
        channel: 'dbf1dee9-4f2e-4a08-8cb7-748919a71b21'
      }
    };
    socket.on('connect', function() {
      return console.log("Connected.");
    });
    _ref = this.unsubscribe;
    for (channel in _ref) {
      obj = _ref[channel];
      socket.send(JSON.stringify(obj));
    }
    socket.on('message', function(res) {
      try {
        return _this.price = res.ticker.last.display_short;
      } catch (_error) {}
    });
    this.price2 = tickerSvc.data;
  });

}).call(this);

/*
//@ sourceMappingURL=app.map
*/
